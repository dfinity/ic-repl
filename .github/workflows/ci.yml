name: Tests
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ghc: '8.8.4'
      spec: '0.18.0'
    steps:
    - uses: actions/checkout@v2

    - name: Checkout ic-ref
      uses: actions/checkout@v2
      with:
        repository: 'dfinity/ic-hs'
        path: ic-hs
        ref: ${{ env.spec }}
    - name: Cache cabal
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/store
        key: cabal-${{ runner.os }}-${{ env.ghc }}-${{ env.spec }}-${{ hashFiles('ic-hs/cabal.project', 'ic-hs/cabal.project.freeze') }}
    - uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ env.ghc }}
        cabal-version: '3.2'
    - name: Build ic-ref
      run: |
        cabal --version
        mkdir -p $HOME/bin
        cd ic-hs/
        cabal update
        cabal install -w ghc-${{ env.ghc }} --overwrite-policy=always  --installdir=$HOME/bin
    - name: Running ic-ref
      id: ic_ref
      run: |
        set -ex
        $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
        sleep 1
        echo "::set-output name=IC_REF_PORT::$(cat $HOME/ic_ref_port)"

    - name: Install stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test
    - name: fmt
      run: cargo fmt -v -- --check
    - name: lint
      run: cargo clippy --tests -- -D clippy::all

    - name: e2e tests
      run: |
        set -ex
        target/debug/ic-repl -r http://localhost:${{ steps.ic_ref.outputs.IC_REF_PORT }} examples/install.sh
    - name: clean up
      run: killall ic-ref
